<!DOCTYPE html>
<html lang="en">
	<%- include('head'); -%>

	<body>
		<main id="app">
			<div class="wrap max" v-bind:style="'visibility:visible;'">
				<section id="toast" v-bind:class="toast.type + (toast.message ? ' show' : '')" v-on:click="toast.message = ''">
					{{toast.message}}
				</section>

				<header class="row flex" v-if="showHeader">
					<div class="title name flex-1">
						<a href="javascript:void(0)" v-on:click="copyURL">#{{channelId}}</a>
					</div>
					<a
						href="javascript:void(0)"
						class="icon-message-circle"
						v-on:click="showChat=true"
						v-if="chatEnabled && callInitiated"
					></a>
				</header>

				<div class="split-layout" v-if="callInitiated">
					<div class="split-layout-left">
						<section>
							<div id="videos">
								<div class="video self">
									<video v-bind:src-object.prop.camel="localMediaStream" autoplay muted playsinline></video>
									<div class="name"><i v-bind:class="'icon-mic'+(audioEnabled ? '' : '-off')"></i> {{name}} (You)</div>
									<div class="buttons">
										<button v-bind:class="'icon-mic'+(audioEnabled ? '' : '-off')" v-on:click="toggleAudio"></button>
										<button v-bind:class="'icon-video'+(videoEnabled ? '' : '-off')" v-on:click="toggleVideo"></button>
									</div>
								</div>
								<div class="video" v-for="(peer, i) in peersArray" v-bind:key="peerKey">
									<video v-bind:src-object.prop.camel="peer.stream" autoplay playsinline></video>
									<div class="name">
										<i v-bind:class="'icon-mic'+(peer.isMuted ? '-off' : '')+' '+(peer.isTalking ? 'green' : '')"></i>
										{{peer.name}}
									</div>
								</div>
							</div>
						</section>
					</div>

					<div class="split-layout-right" v-if="aiEnabled">
						<div class="ai-container">
							<!-- Voice selector -->
							<div class="voice-select">
								<label for="voiceSelect">Select a voice</label>
								<select id="voiceSelect" v-model="selectedVoice">
									<option value="ash">Ash - Gentle & Professional</option>
									<option value="nova">Nova - Friendly & Energetic</option>
									<option value="echo">Echo - Clear & Precise</option>
								</select>
							</div>

							<!-- Broadcast button -->
							<button 
								v-on:click="toggleAIAssistant"
								v-bind:class="{ 
									'active': aiAssistantActive,
									'loading': isAILoading 
								}"
								v-bind:disabled="isAILoading"
								class="w-full py-6 text-lg"
							>
								{{ isAILoading ? 'Please wait...' : (aiAssistantActive ? 'Stop Broadcasting' : 'Start Broadcasting') }}
							</button>

							<!-- Trigger phrase input -->
							<div class="flex items-center gap-2 mt-4">
								<input
									type="text"
									v-model="triggerPhrase"
									placeholder="Enter trigger phrase"
									class="flex-1"
								/>
								<button v-on:click="setTriggerPhrase">Set Trigger Phrase</button>
							</div>
						</div>

						<!-- Transcript section -->
						<div class="transcript-container">
							<div class="transcript-header">
								<div class="font-medium">Full Transcript</div>
								<button v-on:click="clearTranscript" class="icon-trash">
									<i class="icon-trash"></i>
								</button>
							</div>
							<div class="transcript-content">
								<!-- Transcript messages will go here -->
							</div>
						</div>
					</div>
				</div>

				<section id="nameWrap" class="wrap mini" v-if="!callInitiated">
					<div class="row">Click join to enter the video call</div>
					<div class="row">
						<input
							type="text"
							id="myName"
							v-model="name"
							v-on:keyup="updateName"
							v-on:keyup.enter="initiateCall"
							placeholder="Your name"
							maxlength="50"
						/>
					</div>

					<div class="row">
						<select id="audioDevice" v-model="selectedAudioDeviceId">
							<option
								v-for="(audioDevice, i) in audioDevices"
								v-bind:key="audioDevice.deviceId"
								v-bind:value="audioDevice.deviceId"
							>
								{{audioDevice.label}}
							</option>
						</select>
					</div>

					<div class="row">
						<select id="videoDevice" v-model="selectedVideoDeviceId">
							<option
								v-for="(videoDevice, i) in videoDevices"
								v-bind:key="videoDevice.deviceId"
								v-bind:value="videoDevice.deviceId"
							>
								{{videoDevice.label}}
							</option>
						</select>
					</div>

					<div class="row">
						<button v-if="!callInitiated" v-on:click="initiateCall">Join</button>
					</div>
				</section>

				<section id="chatwrap" v-if="callInitiated && showChat">
					<div class="blanket" v-on:click="showChat=false"></div>
					<div id="chatContainer">
						<div id="chats">
							<div class="chat" v-for="(chat, i) in chats" v-bind:key="i">
								<span class="name">{{chat.name}}</span>
								<span class="date light small"> &middot; {{formatDate(chat.date)}}</span>
								<div class="message" v-html="linkify(chat.message)"></div>
							</div>
							<div id="noChat" class="light" v-if="!chats.length"><small>No chat messages.</small></div>
						</div>
						<textarea
							v-model="chatMessage"
							rows="1"
							v-on:keydown.enter="sendChat"
							placeholder="Enter your message"
						></textarea>
					</div>
				</section>
			</div>
		</main>
	</body>
</html>
